{
  "metadata": {
    "mmif": "http://mmif.clams.ai/1.0.0"
  },
  "documents": [
    {
      "@type": "http://mmif.clams.ai/vocabulary/VideoDocument/v1",
      "properties": {
        "mime": "video",
        "id": "d1",
        "location": "baapb://cpb-aacip-507-vd6nz81n6r.video"
      }
    }
  ],
  "views": [
    {
      "id": "v_0",
      "metadata": {
        "timestamp": "2023-08-20T17:39:13.281618",
        "app": "http://apps.clams.ai/east-textdetection/v1.1",
        "parameters": {
          "stopAt": "18000"
        },
        "error": {
          "message": "<class 'requests.exceptions.JSONDecodeError'>: Expecting value: line 1 column 1 (char 0)",
          "stackTrace": "  File \"/usr/local/lib/python3.8/site-packages/clams/restify/__init__.py\", line 146, in post\n    return self.json_to_response(self.cla.annotate(raw_data, **self.annotate_param_caster.cast(raw_params)))\n\t\n  File \"/usr/local/lib/python3.8/site-packages/clams/app/__init__.py\", line 116, in annotate\n    annotated = self._annotate(mmif, **runtime_params)\n\t\n  File \"/app/app.py\", line 30, in _annotate\n    self.logger.debug(f\"Running on video {videodocument.location_path()}\")\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 324, in location_path\n    return self.properties.location_path_resolved(nonexist_ok=nonexist_ok)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 478, in location_path_resolved\n    p = discovered_docloc_plugins[scheme].resolve(self.location)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif_docloc_baapb/__init__.py\", line 19, in resolve\n    return r.json()[0]\n\t\n  File \"/usr/local/lib/python3.8/site-packages/requests/models.py\", line 975, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n"
        }
      },
      "annotations": []
    },
    {
      "id": "v_1",
      "metadata": {
        "timestamp": "2023-08-20T21:57:58.326580",
        "app": "http://apps.clams.ai/tesseractocr-wrapper/v1.0",
        "error": {
          "message": "<class 'requests.exceptions.JSONDecodeError'>: Expecting value: line 1 column 1 (char 0)",
          "stackTrace": "  File \"/usr/local/lib/python3.8/site-packages/clams/restify/__init__.py\", line 146, in post\n    return self.json_to_response(self.cla.annotate(raw_data, **self.annotate_param_caster.cast(raw_params)))\n\t\n  File \"/usr/local/lib/python3.8/site-packages/clams/app/__init__.py\", line 116, in annotate\n    annotated = self._annotate(mmif, **runtime_params)\n\t\n  File \"/app/app.py\", line 36, in _annotate\n    videoObj = vdh.capture(vds[0])\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/utils/video_document_helper.py\", line 52, in capture\n    v = cv2.VideoCapture(video_document.location_path(nonexist_ok=False))\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 324, in location_path\n    return self.properties.location_path_resolved(nonexist_ok=nonexist_ok)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 478, in location_path_resolved\n    p = discovered_docloc_plugins[scheme].resolve(self.location)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif_docloc_baapb/__init__.py\", line 19, in resolve\n    return r.json()[0]\n\t\n  File \"/usr/local/lib/python3.8/site-packages/requests/models.py\", line 975, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n"
        }
      },
      "annotations": []
    }
  ]
}