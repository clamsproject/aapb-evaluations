{
  "metadata": {
    "mmif": "http://mmif.clams.ai/1.0.4"
  },
  "documents": [
    {
      "@type": "http://mmif.clams.ai/vocabulary/VideoDocument/v1",
      "properties": {
        "mime": "video",
        "id": "d1",
        "location": "baapb://cpb-aacip-507-vd6nz81n6r.video"
      }
    }
  ],
  "views": [
    {
      "id": "v_0",
      "metadata": {
        "timestamp": "2024-07-04T03:07:58.530194",
        "app": "http://apps.clams.ai/swt-detection/v5.1",
        "appConfiguration": {
          "startAt": 0,
          "stopAt": 9223372036854775807,
          "sampleRate": 1000,
          "minFrameScore": 0.01,
          "minTimeframeScore": 0.5,
          "minFrameCount": 2,
          "modelName": "20240626-205715.convnext_lg",
          "useStitcher": true,
          "allowOverlap": true,
          "map": {
            "B": "bars",
            "S": "slate",
            "I": "chyron",
            "N": "chyron",
            "Y": "chyron",
            "C": "credits",
            "R": "credits",
            "W": "other_opening",
            "L": "other_opening",
            "O": "other_opening",
            "M": "other_opening",
            "E": "other_text",
            "K": "other_text",
            "G": "other_text",
            "T": "other_text",
            "F": "other_text"
          },
          "pretty": false
        },
        "error": {
          "message": "<class 'requests.exceptions.JSONDecodeError'>: Expecting value: line 1 column 1 (char 0)",
          "stackTrace": "  File \"/usr/local/lib/python3.8/site-packages/clams/restify/__init__.py\", line 146, in post\n    return self.json_to_response(self.cla.annotate(raw_data, **raw_params))\n\t\n  File \"/usr/local/lib/python3.8/site-packages/clams/app/__init__.py\", line 140, in annotate\n    annotated = self._annotate(mmif, **refined)\n\t\n  File \"/app/app.py\", line 52, in _annotate\n    self.logger.info(f\"Processing video {video.id} at {video.location_path()}\")\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 435, in location_path\n    return self.properties.location_path_resolved(nonexist_ok=nonexist_ok)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif/serialize/annotation.py\", line 594, in location_path_resolved\n    p = discovered_docloc_plugins[scheme].resolve(self.location)\n\t\n  File \"/usr/local/lib/python3.8/site-packages/mmif_docloc_baapb/__init__.py\", line 19, in resolve\n    return r.json()[0]\n\t\n  File \"/usr/local/lib/python3.8/site-packages/requests/models.py\", line 978, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n"
        }
      },
      "annotations": []
    },
    {
      "id": "v_1",
      "metadata": {
        "timestamp": "2024-07-03T23:07:59.992782",
        "app": "http://apps.clams.ai/paddleocr-wrapper/becfa66",
        "error": {
          "message": "<class 'IndexError'>: list index out of range",
          "stackTrace": "  File \"/home/krim/anaconda3/envs/clams-app-paddleocr-wrapper/lib/python3.8/site-packages/clams/restify/__init__.py\", line 146, in post\n    return self.json_to_response(self.cla.annotate(raw_data, **raw_params))\n\t\n  File \"/home/krim/anaconda3/envs/clams-app-paddleocr-wrapper/lib/python3.8/site-packages/clams/app/__init__.py\", line 130, in annotate\n    annotated = self._annotate(mmif, **refined)\n\t\n  File \"/home/krim/syncing/projects/clams/clamsproject/app-paddleocr-wrapper/app.py\", line 31, in _annotate\n    input_view: View = mmif.get_views_for_document(video_doc.properties.id)[0]\n"
        }
      },
      "annotations": []
    }
  ]
}